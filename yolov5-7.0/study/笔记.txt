一、文件说明
    classify: 用YOLOv5的骨干网络实现分类业务
    data: 存储配置文件
        data/***.yaml: 数据配置文件，给定数据位置的
        data/hyps/***.yaml: 超参数配置文件
        data/images: 测试图像文件所在的文件夹
        data/scripts: 脚本文件夹，主要用于下载数据(Linux环境下可运行)
    models: 模型核心代码以及目标检测模型结构配置文件
    segment: YOLOv5应用到图像分割业务中的训练、预测、评估代码
    utils: 工具类代码
    detect.py: 目标检测模型检测的相关代码--> 用训练好的模型做目标检测
    export.py: 将PyTorch生成的原始格式模型转换成其它格式
    train.py: 目标检测模型训练代码
    val.py: 目标检测模型评估代码
    hubconf.py: 针对torch.hub提供的入口代码文件
===========================================================
YOLOv5结构更新(v7.0代码结构相比于ppt所说的内容):
-1. 默认激活函数采用: nn.SiLU
-2. 取消了Focus结构，直接替代为卷积: 6*6的卷积，步长为2，填充为2
-3. 模型的主要特征提取模块从CSP替换成C3结构：更改了部分卷积操作 + BN位置 + Neck部分的C3也加入了残差
-4. 将SPP池化更改为SPPF池化: SPPF执行速度更快
===========================================================
异常说明：
    1. OMP: Error #15: Initializing libiomp5md.dll, but found libiomp5md.dll already initialized.
        产生原因：环境中存在多个libiomp5md.dll文件
        解决方式：os.environ["KMP_DUPLICATE_LIB_OK"] = "TRUE" 或者 删除其中一个文件
===========================================================
操作：
    NOTE: 所有的python命令行操作，均在yolov5根目录下进行操作
    源码下载及分支构建：
        在准备保存yolov5项目代码的文件夹中，启动命令行，执行以下命令(git已安装好):
            git clone https://github.com/ultralytics/yolov5.git
        代码导入到PyCharm中
        选择修改分支：master --[Checkout...]--> v7.0 --[New Branch]--> xm_cv01_v7.0
    依赖库的安装：
        结合requirements.txt进行对应的依赖库的安装
    YOLOv5的测试效果(推理)：
        01_YOLOv5目标检测效果测试.py
        python detect.py --weights study/yolov5s.pt --source data/images --save-txt
    YOLOv5的模型训练及模型评估：
        最简单的训练来讲：
            -a. 给定训练数据配置文件
                给定训练数据在磁盘的哪个位置，就是给定路径即可
                NOTE: 图像x的路径中一定包含images，标签y的路径中一定包含labels
            -b. 从github上下载训练好的yolov5模型作为初始的迁移模型即可
            python train.py --data ./data/coco128_copy.yaml --weights ./study/yolov5s.pt  --batch-size 8 --workers 0 --epochs 3
        训练好的模型评估:
            python val.py --data ./data/coco128_copy.yaml --weights ./runs/train/exp3/weights/best.pt --workers 0
        模型文件的转换:
            python export.py --include onnx --weights ./runs/train/exp3/weights/best.pt
    查看网络结构
           02_YOLOv5网络结构创建代码理解.py


